/**
 * This class is generated by jOOQ
 */
package aps.back.generated.jooq.tables;


import aps.back.generated.jooq.JQPublic;
import aps.back.generated.jooq.Keys;
import aps.back.generated.jooq.tables.records.JQFileUserPermissionsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JQFileUserPermissions extends TableImpl<JQFileUserPermissionsRecord> {

    private static final long serialVersionUID = -2033998045;

    /**
     * The reference instance of <code>public.file_user_permissions</code>
     */
    public static final JQFileUserPermissions FILE_USER_PERMISSIONS = new JQFileUserPermissions();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JQFileUserPermissionsRecord> getRecordType() {
        return JQFileUserPermissionsRecord.class;
    }

    /**
     * The column <code>public.file_user_permissions.file_id</code>.
     */
    public final TableField<JQFileUserPermissionsRecord, Long> FILE_ID = createField("file_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('file_user_permissions_file_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.file_user_permissions.user_id</code>.
     */
    public final TableField<JQFileUserPermissionsRecord, Long> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('file_user_permissions_user_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.file_user_permissions.deleted</code>.
     */
    public final TableField<JQFileUserPermissionsRecord, Boolean> DELETED = createField("deleted", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.file_user_permissions.inserted_at</code>.
     */
    public final TableField<JQFileUserPermissionsRecord, Timestamp> INSERTED_AT = createField("inserted_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>public.file_user_permissions.updated_at</code>.
     */
    public final TableField<JQFileUserPermissionsRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>public.file_user_permissions</code> table reference
     */
    public JQFileUserPermissions() {
        this("file_user_permissions", null);
    }

    /**
     * Create an aliased <code>public.file_user_permissions</code> table reference
     */
    public JQFileUserPermissions(String alias) {
        this(alias, FILE_USER_PERMISSIONS);
    }

    private JQFileUserPermissions(String alias, Table<JQFileUserPermissionsRecord> aliased) {
        this(alias, aliased, null);
    }

    private JQFileUserPermissions(String alias, Table<JQFileUserPermissionsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return JQPublic.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<JQFileUserPermissionsRecord, Long> getIdentity() {
        return Keys.IDENTITY_FILE_USER_PERMISSIONS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<JQFileUserPermissionsRecord> getPrimaryKey() {
        return Keys.FILE_USER_PERMISSIONS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<JQFileUserPermissionsRecord>> getKeys() {
        return Arrays.<UniqueKey<JQFileUserPermissionsRecord>>asList(Keys.FILE_USER_PERMISSIONS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<JQFileUserPermissionsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<JQFileUserPermissionsRecord, ?>>asList(Keys.FILE_USER_PERMISSIONS__FILE_USER_PERMISSIONS_FILE_ID_FKEY, Keys.FILE_USER_PERMISSIONS__FILE_USER_PERMISSIONS_USER_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JQFileUserPermissions as(String alias) {
        return new JQFileUserPermissions(alias, this);
    }

    /**
     * Rename this table
     */
    public JQFileUserPermissions rename(String name) {
        return new JQFileUserPermissions(name, null);
    }
}
