Java
====

    Import Gradle dependencies

        cd /d e:\work\aps\back
        import-deps
        File -> Project Structure -> Libraries -> aps-gradle-lib
        Remove/add necessary shit from aps/back/lib-gradle

    Generate shit

        _run.cmd aps.Spew


MySQL
=====
    phpMyAdmin
        In config.inc.php:
            $cfg['Servers'][$i]['user'] = 'root';
            $cfg['Servers'][$i]['password'] = '';
            $cfg['Servers'][$i]['controluser'] = 'root';
            $cfg['Servers'][$i]['controlpass'] = '';

    Setting up
        drop user ''@'localhost'; -- Otherwise no one with `%` host will be able to connect
        After creating a database change its collation to utf8_general_ci

    Console
        mysqld
        mysql -u root
        mysql -u root -e shutdown
        show databases;
        select host, user, password from mysql.user;

    Memory drive
        mysql -u root -e shutdown
        imdisk -a -t vm -s 300M -m r:
        Click "Format"
        Copy all freaking C:\opt\mariadb-10.1.22-winx64\data to R:
        Rename original `data` to something
        mklink /j C:\opt\mariadb-10.1.22-winx64\data r:\data
        mysqld


PostgreSQL
==========

    Stuff

        imdisk -a -t vm -s 300M -m r:

        Click "Format"

        cd /d E:\work\aps\back\bin\dev\win
        title pg-test & pg-test-start.cmd
            | It will output following shit, which is OK: FATAL:  role "Vladimir" does not exist
            | In the end it should say, "server started"


        cd /d E:\work\aps\back\bin\dev\win
        title pg-dev & pg-dev-start.cmd
            | It will output following shit, which is OK: FATAL:  role "Vladimir" does not exist
            | In the end it should say, "server started"

        // cd /d e:\work\aps
        // ant java -Dclass=aps.back.GenerateJOOQKt

        cd /d e:\work\aps
        (Don't forget to compile code before this, as schema.sql should end up in resources)
        _run aps.back.GenerateJOOQKt

        ant java -Dclass=aps.back.Fiddle -Dhow=RecreateSchema_bmix_fuckingAround_apsdevua

    PSQL to aps-test
        psql -h 127.0.0.1 -p 5433 -U postgres -w aps-test

    Create test database
        %pg_home%\bin\psql.exe -h 127.0.0.1 -p 5433 postgres postgres
        create database "aps-test" encoding 'UTF8';
        \l

    Drop all shit
        drop schema public cascade;

    PSQL stuff
        \x auto                         Automatic output format (rows/columns) depending on whether data fits on screen
        \pset pager


JavaScript
==========

    F.dumpLocalStorage()
    localStorage.setItem('reloadTest', 'true')
    localStorage.setItem('dontScrollOnTestPassed', 'true')
    F.dumpShames()

    cd /d e:\work\aps
    node run.js runAllUnitTests


Static Sites
============

Serve development static sites

    cd /d e:\work\aps\front
    node run.js ServeDevStaticSites


Redis
=====

Configure redis.windows.conf

    maxmemory 512mb
    maxmemory-policy allkeys-lru

    Comment out all lines starting with `save`

Start

    cd /d C:\opt\Redis
    title redis-server & redis-server redis.windows.conf
    title redis-cli & redis-cli


Delete everything

    flushall

Misc

    llen logRoot:children
    del logRoot:children

Links
=====

    http://aps-ua-writer.local:3022/faq.html?test=Test_UACustomer_Order_Files_EditFile&stopOnAssertions=true&dontStopOnCorrectAssertions=true&animateUserActions=true&handPauses=true


    http://aps-ua-writer.local:3022/faq.html?test=Test_UA_CrazyLong_1&stopOnAssertions=true&dontStopOnCorrectAssertions=true&animateUserActions=true&handPauses=true

    http://aps-ua-writer.local:3022/debug.html?page=log&cut=last_boot
    http://aps-ua-writer.local:3022/debug.html?page=log&cut=last_boot&skipCrap=true

    http://aps-ua-writer.local:3022/faq.html?test=TestWriter_Boot_ProfileRejected
    http://aps-ua-writer.local:3022/faq.html?test=TestWriter_Boot_Cool


CloudFoundry
============

    ant BundleForCloudFoundry
    cf push -f back\manifest.yml

    ant PushSlimShitToCF


Kotlin compiler command line arguments
======================================

    -Xplugin
    C:\Users\Vladimir\.IdeaIC2017.1\config\plugins\Kotlin\kotlinc\lib\noarg-compiler-plugin.jar
    -P
    plugin:org.jetbrains.kotlin.noarg:annotation=aps.back.Fucking
    -P
    plugin:org.jetbrains.kotlin.noarg:annotation=javax.persistence.MappedSuperclass
    -P
    plugin:org.jetbrains.kotlin.noarg:annotation=javax.persistence.Entity
    -P
    plugin:org.jetbrains.kotlin.noarg:annotation=javax.persistence.Embeddable
    -P
    plugin:org.jetbrains.kotlin.noarg:annotation=aps.NoArgCtor
    -P
    plugin:org.jetbrains.kotlin.noarg:annotation=aps.Ser
    -Xplugin
    C:\Users\Vladimir\.IdeaIC2017.1\config\plugins\Kotlin\kotlinc\lib\allopen-compiler-plugin.jar
    -P
    plugin:org.jetbrains.kotlin.allopen:annotation=aps.back.Fucking
    -P
    plugin:org.jetbrains.kotlin.allopen:annotation=javax.persistence.MappedSuperclass
    -P
    plugin:org.jetbrains.kotlin.allopen:annotation=javax.persistence.Entity
    -P
    plugin:org.jetbrains.kotlin.allopen:annotation=javax.persistence.Embeddable
    -P
    plugin:org.jetbrains.kotlin.allopen:annotation=aps.AllOpen
    -P
    plugin:org.jetbrains.kotlin.allopen:annotation=aps.Ser
    -version


Git
===

    git config --global core.pager cat


Misc
====

Hash file

    PS> $(CertUtil -hashfile "e:\work\aps\back\testfiles\piece of trial 2.rtf" SHA1)[1] -replace " ", ""

Compare images

    magick compare shebang.png shit-1008.png diff.png




cd /d e:\work\aps
title aps forever & _run aps.back.Forever

ant generate-shit

-javaagent:javaagent/dist/aps-javaagent.jar    -javaagent:back/lib-gradle/aspectjweaver-1.8.10.jar










