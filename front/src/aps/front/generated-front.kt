/*
 * APS
 *
 * (C) Copyright 2015-2017 Vladimir Grechka
 *
 * YOU DON'T MESS AROUND WITH THIS SHIT, IT WAS GENERATED BY A TOOL SMARTER THAN YOU
 */

package aps.front

import aps.*


// ==================================================================
// REMOTE PROCEDURE STUBS
// ==================================================================

@Generated suspend fun mirandaImposeNextGeneratedPassword(password:String): Unit = _askMiranda<__MirandaImposeNextGeneratedPassword_Response>(__MirandaImposeNextGeneratedPassword(password = password)).value
@Generated suspend fun mirandaImposeNextGeneratedUserToken(token:String): Unit = _askMiranda<__MirandaImposeNextGeneratedUserToken_Response>(__MirandaImposeNextGeneratedUserToken(token = token)).value
@Generated suspend fun mirandaImposeNextOrderID(id:Long): Unit = _askMiranda<__MirandaImposeNextOrderID_Response>(__MirandaImposeNextOrderID(id = id)).value
@Generated suspend fun mirandaGetGeneratedTestTimestamps(): List<String> = _askMiranda<__MirandaGetGeneratedTestTimestamps_Response>(__MirandaGetGeneratedTestTimestamps()).value
@Generated suspend fun mirandaSeedSomeStuff1(): Unit = _askMiranda<__MirandaSeedSomeStuff1_Response>(__MirandaSeedSomeStuff1()).value
@Generated suspend fun reginaAdminSendOrderToStore(orderID:Long): FormResponse2<Unit> = _simplifyFormResponseMeat(_askRegina<__ReginaAdminSendOrderToStore_Response>(__ReginaAdminSendOrderToStore(orderID = orderID)))

// ==================================================================
// CONTROL TESTING HELPERS
// ==================================================================

// ------------------------------------------------------------------
// Select
// ------------------------------------------------------------------

// writerStoreFilter

    val tselect.writerStoreFilter get() = __WriterStoreFilterTester
    object __WriterStoreFilterTester {
        suspend fun setRawValue(value: String) = tselect.setValue(selects.writerStoreFilter, value)
        suspend fun setValue(value: WriterStoreFilter) = setRawValue(value.name)
    }

// adminUserFilter

    val tselect.adminUserFilter get() = __AdminUserFilterTester
    object __AdminUserFilterTester {
        suspend fun setRawValue(value: String) = tselect.setValue(selects.adminUserFilter, value)
        suspend fun setValue(value: AdminUserFilter) = setRawValue(value.name)
    }

// customerFileFilter

    val tselect.customerFileFilter get() = __CustomerFileFilterTester
    object __CustomerFileFilterTester {
        suspend fun setRawValue(value: String) = tselect.setValue(selects.customerFileFilter, value)
        suspend fun setValue(value: CustomerFileFilter) = setRawValue(value.name)
    }

// adminOrderFilter

    val tselect.adminOrderFilter get() = __AdminOrderFilterTester
    object __AdminOrderFilterTester {
        suspend fun setRawValue(value: String) = tselect.setValue(selects.adminOrderFilter, value)
        suspend fun setValue(value: CustomerFileFilter) = setRawValue(value.name)
    }

// userParamsHistoryFilter

    val tselect.userParamsHistoryFilter get() = __UserParamsHistoryFilterTester
    object __UserParamsHistoryFilterTester {
        suspend fun setRawValue(value: String) = tselect.setValue(selects.userParamsHistoryFilter, value)
        suspend fun setValue(value: CustomerFileFilter) = setRawValue(value.name)
    }

